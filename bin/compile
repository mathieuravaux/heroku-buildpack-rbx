#!/usr/bin/env bash

indent() {
  sed -u 's/^/       /'
}

download() {
  curl -L -s -S $@
}

ensure_env() {
  echo "Ensuring suitable environment"
  mkdir -p $CACHE
  mkdir -p $BUILD
  export $PATH="$CACHE:$PATH"
}


install_rbx() {
  local old_path=$PWD

    if ! which rbx &>/dev/null && [ "$1" != "-f" ] ; then
      echo "-----> rbx install detected, checking version..." 

      if [ "$(cat $CACHE/rbx_version)" != $RBX_VERSION ] ; then 
        echo "old version detected, re-building" | indent
        install_rbx -f
      else 
        echo "version is up to date" | indent 
      fi

    else 
      echo "-----> Installing rbx-head, with 1.9 support"

      mkdir -p /tmp/rbx

      echo "Downloading Rubinius" | indent
        download $RBX_URL/release-$RBX_VERSION | tar -zx$VERBOSE
        mv rubinius-rubinius-* /tmp/rbx/rubinius

      echo "Compiling" | indent
        ./configure --prefix $CACHE/rbx --default-version=1.9
        rake install 
        echo $RBX_VERSION > $CACHE/rbx_version
      
    fi 
    
  cd $old_path

  return 0
}

install_base_gems() {
  echo "Installing bundler"
  rbx -S gem install bundler

  echo "Installing foreman"
  rbx -S gem install foreman
  return 2
}

init_environment() {
  echo "-----> Initializing Basic Environment" 
  mkdir -p $BUILD 
  mkdir -p $CACHE

  mkdir -p $CACHE/gems/{bin,install}
  gem install -l -n $CACHE/gems/bin -i $CACHE/gems/install --no-rdoc --no-ri rake

  touch $CACHE/rbx_version
}


bootstrap() {
  init_environment
  install_rbx
  install_base_gems
}

install_gems() {
  # if gemfile exists, bundle
  if [ -s $1/Gemfile ]; then
    echo "Gemfile found, bundling" | indent
    foreman run bundle
  fi
}


set -e

#set -x

VERBOSE=
RBX_URL=https://github.com/rubinius/rubinius/tarball
RBX_VERSION="1.2.4"
BUILD=$1
CACHE=$2



bootstrap
install_gems
exit 1
foreman start


